services:
  # Redis - Message Broker and Result Backend
  redis:
    image: redis:7-alpine
    container_name: business-search-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - business-search-net

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: business-search-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LLM_PROVIDER=ollama
      - LLM_MODEL=llama3.2
      - LLM_BASE_URL=http://host.docker.internal:11434
      - SCRAPER_HEADLESS=true
      - API_RELOAD=false
    volumes:
      - ./backend/app:/app/app
      - ./backend/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    networks:
      - business-search-net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: business-search-celery-worker
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LLM_PROVIDER=ollama
      - LLM_MODEL=llama3.2
      - LLM_BASE_URL=http://host.docker.internal:11434
      - SCRAPER_HEADLESS=true
    volumes:
      - ./backend/app:/app/app
      - ./backend/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    command: celery -A app.celery_app.celery_config worker --loglevel=info --concurrency=2
    networks:
      - business-search-net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Celery Beat (Optional)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: business-search-celery-beat
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend/app:/app/app
      - ./backend/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A app.celery_app.celery_config beat --loglevel=info
    networks:
      - business-search-net

  # Flower (Optional)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: business-search-flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started
    command: celery -A app.celery_app.celery_config flower --port=5555
    networks:
      - business-search-net

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: business-search-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_started
    networks:
      - business-search-net

volumes:
  redis_data:
    driver: local

networks:
  business-search-net:
    driver: bridge
